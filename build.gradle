buildscript {
 	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/libs-milestone" }
    }

    dependencies {
        //classpath boot.springBootPlugin
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.concrete.desafiojava'
version = '0.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {	
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.projectlombok:lombok')
	compile('io.jsonwebtoken:jjwt:0.7.0')
	compile('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	//compile('net.logstash.logback:logstash-logback-encoder')
	//compile('com.github.jsimone:webapp-runner:8.5.11.3')
	//providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}


jar {
    manifest {
        attributes("Created-By": "Victor Moraes",
                "Specification-Title": "Concrete Java Challenge",
                "Main-Class"         : "com.concrete.desafiojava.ConcreteJavaChallengeApplication",
                "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
    }
}